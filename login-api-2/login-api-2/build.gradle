repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://jitpack.io' }
}

buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven { url 'https://jitpack.io' }
    }
    dependencies {
        // https://bintray.com/android/android-tools/com.android.tools.build.gradle/view
        classpath 'com.android.tools.build:gradle:2.2.0'
        // https://github.com/JakeWharton/sdk-manager-plugin
        classpath 'com.github.JakeWharton:sdk-manager-plugin:e05218601b1274ea0721e13b33a426f641156f69'
    }
}

apply plugin: 'android-sdk-manager'
apply plugin: 'com.android.library'
apply from: '../private-data/merge-private-data.gradle'

String isTesting() {
    if ( System.getenv("IS_TESTING") == "true" ) {
        "true"
    } else {
        "false"
    }
}

android {

    publishNonDefault true

    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        buildConfigField "boolean", "IS_TESTING", isTesting()

        /* Add private data */
        mergePrivateData "login-api"
        def privateProps = new Properties()
        privateProps.load(new FileInputStream("$projectDir/private.properties"))
        buildConfigField "String", "ZENDESK_DOMAIN", "\"${privateProps.zendeskDomain}\""
        buildConfigField "String", "ZENDESK_CREDENTIALS", "\"${privateProps.zendeskCredentials}\""
        buildConfigField "String", "ANONYMOUS_SCHOOL_DOMAIN", "\"${privateProps.anonymousSchoolDomain}\""
    }
    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    lintOptions {
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }
}


configurations {
    all*.exclude group: 'commons-logging', module: 'commons-logging'
    all*.exclude group: 'org.apache.httpcomponents', module: 'httpclient'
}

dependencies {
    compile project(':canvas-api-2')
    compile project(':pandautils')
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile('com.mobprofs:retrofit-simplexmlconverter:1.0') {
        exclude module: 'stax'
        exclude module: 'stax-api'
        exclude module: 'xpp3'
    }

    //Okhttp
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.7.1'
    compile 'com.squareup.okio:okio:1.9.0'
    compile 'com.squareup.okhttp3:okhttp:3.4.1'

    compile 'com.squareup.retrofit:retrofit:1.9.0'

    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.amazonaws:aws-android-sdk-s3:2.1.4'
    compile 'com.amazonaws:aws-android-sdk-core:2.1.4'
    compile 'de.hdodenhof:circleimageview:2.0.0'
    compile('com.github.afollestad.material-dialogs:core:0.8.5.6@aar') {
        transitive = true
    }

    compile rootProject.ext.supportDependencies.appCompat
    compile rootProject.ext.supportDependencies.cardView
}


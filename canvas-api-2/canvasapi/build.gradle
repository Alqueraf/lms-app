/*
 * Copyright (C) 2017 - present Instructure, Inc.
 *
 *     Licensed under the Apache License, Version 2.0 (the "License");
 *     you may not use this file except in compliance with the License.
 *     You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 *     Unless required by applicable law or agreed to in writing, software
 *     distributed under the License is distributed on an "AS IS" BASIS,
 *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *     See the License for the specific language governing permissions and
 *     limitations under the License.
 *
 */
apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

repositories {
    jcenter()
    maven { url 'https://jitpack.io' }
    maven { url 'https://maven.google.com' }
}

buildscript {

    repositories {
        jcenter()
        maven { url 'https://jitpack.io' }
        maven { url 'https://maven.google.com' }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$GLOBAL_GRADLE_TOOLS_VERSION"
    }
}

String isTesting() {
    if ( System.getenv("IS_TESTING") == "true" ) {
        "true"
    } else {
        "false"
    }
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        buildConfigField "boolean", "IS_TESTING", isTesting()
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    useLibrary 'org.apache.http.legacy'
}

dependencies {

    /* Support Libs */
    compile rootProject.ext.supportDependencies.appCompat
    compile "com.android.support:support-annotations:$GLOBAL_SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:multidex:$GLOBAL_MULTI_DEX_VERSION"

    /* Kotlin */
    compile "org.jetbrains.kotlin:kotlin-stdlib:$GLOBAL_KOTLIN_VERSION"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:$GLOBAL_KOTLIN_COROUTINES_VERSION"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-android:$GLOBAL_KOTLIN_COROUTINES_VERSION"

    /* Retrofit / GSON */
    compile 'com.google.code.gson:gson:2.8.0'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.2.0'
    compile 'com.squareup.retrofit2:converter-gson:2.2.0'
    compile("com.squareup.retrofit2:converter-simplexml:2.2.0") {
        exclude module: 'stax-api'
        exclude module: 'stax'
        exclude module: 'xpp3'
    }
    compile('com.squareup.retrofit2:retrofit:2.2.0') {
        exclude module: 'okhttp'
    }

    /* PaperParcel */
    compile 'nz.bradcampbell:paperparcel:2.0.2'
    compile 'nz.bradcampbell:paperparcel-kotlin:2.0.2'
    kapt 'nz.bradcampbell:paperparcel-compiler:2.0.2'

    /* OKHttp */
    /* NOTE: always update the logging-interceptor to the same okhttp version */
    compile 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.7.5'
    compile 'com.squareup.okio:okio:1.12.0'
    compile 'com.squareup.okhttp3:okhttp:3.7.0'

    /* RXJava */
    compile 'io.reactivex:rxjava:1.2.5'
    compile 'io.reactivex:rxandroid:1.2.1'

    /* EventBus */
    compile 'org.greenrobot:eventbus:3.0.0'
    kapt 'org.greenrobot:eventbus-annotation-processor:3.0.0'

    /* Test Dependencies */
    testCompile 'junit:junit:4.12'
}

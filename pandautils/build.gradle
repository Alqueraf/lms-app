/*
 * Copyright (C) 2016 - present Instructure, Inc.
 *
 *     Licensed under the Apache License, Version 2.0 (the "License");
 *     you may not use this file except in compliance with the License.
 *     You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 *     Unless required by applicable law or agreed to in writing, software
 *     distributed under the License is distributed on an "AS IS" BASIS,
 *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *     See the License for the specific language governing permissions and
 *     limitations under the License.
 *
 */

repositories {
    jcenter()
    maven { url 'https://jitpack.io' }
}

buildscript {
    repositories {
        jcenter()
        maven { url 'https://jitpack.io' }
    }
    dependencies {
        // https://bintray.com/android/android-tools/com.android.tools.build.gradle/view
        classpath 'com.android.tools.build:gradle:2.3.2'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

String isTesting() {
    if ( System.getenv("IS_TESTING") == "true" ) {
        "true"
    } else {
        "false"
    }
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        buildConfigField "boolean", "IS_TESTING", isTesting()
    }
    buildTypes {
        debug{
            debuggable true
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }

        release{
            debuggable false
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'LICENSE.txt'
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

configurations {
    all*.exclude group: 'commons-logging', module: 'commons-logging'
    all*.exclude group: 'org.apache.httpcomponents', module: 'httpclient'
}


dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':canvas-api')
    compile project(':canvas-api-2')
    compile project(':blueprint')

    /* Kotlin */
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    compile('com.github.afollestad.material-dialogs:core:0.8.5.6@aar') {
        transitive = true
    }
    compile 'com.github.flavienlaurent.datetimepicker:library:0.0.2'
    compile 'com.getbase:floatingactionbutton:1.10.0'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'de.hdodenhof:circleimageview:2.0.0'
    testCompile 'junit:junit:4.12'
    compile 'com.jakewharton:butterknife:8.5.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'
    compile 'com.github.marcoscgdev.EasyLicensesDialog:appcompatversion:1.0.4'
    compile rootProject.ext.supportDependencies.supportAnnotation
    compile rootProject.ext.supportDependencies.design
    compile rootProject.ext.supportDependencies.appCompat
    compile rootProject.ext.supportDependencies.cardView
}
